#include <stdio.h>
#include "windows.h"
#include "hash.h"
#include <fstream>
#include <string>

#pragma comment(lib, "hash.lib")

//23232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323
//hash = 57ec415bbdb5a7402f129972619cd1277ac236ce
//2323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323
//hash = 3888f29ffedfe040761b9ee3771686670ba80c5b
//12232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232312
//hash = 8cb7541ba3f57db53b588f4bd1f0daa415b979f8
//1223232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323231232
//hash = 3ee227226457cb8549833579cc9b821f8bda2dc5
//1223232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323231233
//hash = 3bc4039c9380b2074035e57289a210d0e1ba447f
//122323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323231234
//hash = bd62d965c3cc0daa5bbe5088a2a6faf3810a9208

int main() {
	unsigned char buf[64] = {
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	struct H h;
	unsigned char digest[20];
	sha1begin(&h);
	sha1finish(buf, 55, &h, digest);

	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf2[64] = {
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	sha1begin(&h);
	sha1finish(buf2, 56, &h, digest);

	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf3[64] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12
	};
	sha1begin(&h);
	sha1finish(buf3, 64, &h, digest);

	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf4[128] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12,
		0x32, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	sha1begin(&h);
	sha1finish(buf4, 65, &h, digest);
	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf5[64] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12,
	};

	unsigned char buf6[64] = {
		0x33, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	sha1begin(&h);
	sha1update(buf5, 64, &h);
	sha1finish(buf6, 1, &h, digest);

	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf7[128] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12
	};
	unsigned char buf8[64] = {
		0x34, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	sha1begin(&h);
	sha1update(buf7, 128, &h);
	sha1finish(buf8, 1, &h, digest);
	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf9[320] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12,
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12,
		0x23, 0x23, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00
	};
	sha1begin(&h);
	sha1finish(buf9, 258, &h, digest);
	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	sha1begin(&h);
	std::ifstream in("c:\\users\\user\\desktop\\result.txt", std::ios::binary);
	char buffer[10000] = { 0 };
	in.read(buffer, 10000);
	sha1finish((unsigned char*)buffer, in.gcount(), &h, digest);
	printf("%i\n", (int)in.gcount());
	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	unsigned char buf10[128] = {
		0x12, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x23,
		0x23, 0x23, 0x23, 0x12
	};
	sha1begin(&h);
	sha1update(buf10, 128, &h);
	sha1finish(0, 0, &h, digest);
	for (int i = 0; i < 20; i++) {
		printf("%02x", digest[i]);
	}
	printf("\n");

	return 0;
}